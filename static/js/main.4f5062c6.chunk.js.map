{"version":3,"sources":["components/ScaleControl.tsx","components/TranslationControl.tsx","utilities/colorSet.ts","components/HtmlGraph.tsx","hooks/useRefInit.ts","utilities/index.ts","components/RecipeGraph.tsx","data/Recipes.ts","components/Main.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","userSelect","display","flexDirection","alignItems","justifyContent","padding","spacing","color","palette","text","secondary","scaleText","width","textAlign","resetButton","minWidth","resetButtonText","lineHeight","ScaleControl","React","memo","scale","setScale","styles","Paper","className","IconButton","size","title","disabled","onClick","Typography","toFixed","Button","classes","label","borderRadius","TranslationControl","centered","onResetTranslation","GOLDEN_RATIO_GONJUGATE","position","height","overflow","graph","left","top","link","transformOrigin","node","nodeRadius","borderWidth","borderStyle","transform","recipeNode","borderColor","ingredientNode","img","pointerEvents","controls","right","marginBottom","colors","h","value","s","v","key","hsv","hex","createColorSet","HtmlGraph","nodes","links","onNodeDrag","onNodeDragEnd","onNodeClick","containerRef","useRef","draggingBackgroundRef","draggingNodeRef","firstMoveRef","movedRef","useState","x","y","translation","setTranslation","setScaleBounded","useCallback","newScale","Math","max","round","onBackgroundMouseDown","current","useEffect","onMouseMove","e","movementX","movementY","console","error","getBoundingClientRect","clientX","clientY","window","addEventListener","removeEventListener","onMouseUp","onNodeMouseClick","ref","onMouseDown","style","map","xDistance","target","source","yDistance","distance","sqrt","rotation","atan2","id","backgroundColor","data","name","classNames","type","preventDefault","stopPropagation","onNodeMouseDown","src","alt","UNINITIALIZED","Symbol","for","distinct","values","getKey","distinctValues","keys","Set","toString","has","push","add","container","recipeId","recipe","ingredientId","ingredient","linkId","createIngredientNode","createRecipeNode","category","isLinkNodeHidden","linkNode","hiddenNodes","RecipeGraph","recipes","setHiddenNodes","simulationRef","init","useRefInit","forceSimulation","force","forceManyBody","strength","forceCenter","forceRadial","forceCollide","nodesRef","ingredients","flatMap","existingNodes","n","allNodes","filter","linksRef","l","forceLink","NODE_RADIUS","setUpdateCount","sim","on","oldUpdateCount","fx","fy","alpha","restart","oldHiddenNodes","DISPLAYED_CATEGORIES","allRecipes","Main","createMuiTheme","App","MuiThemeProvider","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f5062c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, Typography, Button, Paper, createStyles, IconButton } from '@material-ui/core';\r\nimport ZoomInIcon from '@material-ui/icons/Add';\r\nimport ZoomOutIcon from '@material-ui/icons/Remove';\r\nimport ZoomedInIcon from '@material-ui/icons/ZoomIn';\r\nimport ZoomedOutIcon from '@material-ui/icons/ZoomOut';\r\n\r\nconst useStyles = makeStyles( ( theme ) => createStyles( {\r\n  root: {\r\n    userSelect: 'none',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing( 0.5, 1 ),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  scaleText: {\r\n    width: '5ch',\r\n    textAlign: 'center',\r\n  },\r\n  resetButton: {\r\n    padding: theme.spacing( 0.5, 1 ),\r\n    minWidth: 0,\r\n  },\r\n  resetButtonText: {\r\n    lineHeight: 'normal',\r\n  }\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n  scale: number;\r\n  setScale: ( scale: number ) => void;\r\n}\r\n\r\nconst ScaleControl: React.FC<Props> = React.memo( ( { scale, setScale } ) =>\r\n{\r\n  const styles = useStyles();\r\n\r\n  function onZoomOutClick()\r\n  {\r\n    if( scale < 2.0 )\r\n    {\r\n      setScale( scale - 0.1 );\r\n    }\r\n    else\r\n    {\r\n      setScale( scale - 0.5 );\r\n    }\r\n  }\r\n\r\n  function onZoomInClick()\r\n  {\r\n    if( scale < 1.5 )\r\n    {\r\n      setScale( scale + 0.1 );\r\n    }\r\n    else\r\n    {\r\n      setScale( scale + 0.5 );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={styles.root}>\r\n      {scale < 1 ?\r\n        (\r\n          <ZoomedOutIcon />\r\n        ) :\r\n        (\r\n          <ZoomedInIcon />\r\n        )\r\n      }\r\n      <IconButton\r\n        size=\"small\"\r\n        color=\"inherit\"\r\n        title=\"Zoom Out\"\r\n        disabled={scale <= 0.1}\r\n        onClick={onZoomOutClick}\r\n      >\r\n        <ZoomOutIcon />\r\n      </IconButton>\r\n      <Typography className={styles.scaleText}>\r\n        {( scale * 100 ).toFixed( 0 )}%\r\n      </Typography>\r\n      <IconButton\r\n        size=\"small\"\r\n        color=\"inherit\"\r\n        title=\"Zoom In\"\r\n        onClick={onZoomInClick}\r\n      >\r\n        <ZoomInIcon />\r\n      </IconButton>\r\n      <Button\r\n        className={styles.resetButton}\r\n        classes={{\r\n          root: styles.resetButton,\r\n          label: styles.resetButtonText,\r\n        }}\r\n        color=\"inherit\"\r\n        disabled={scale === 1}\r\n        onClick={() => setScale( 1 )}\r\n      >\r\n        Reset\r\n      </Button>\r\n    </Paper>\r\n  );\r\n} );\r\n\r\nexport default ScaleControl;\r\n","import React from 'react';\r\nimport { IconButton, Paper, makeStyles } from '@material-ui/core';\r\nimport CenteredIcon from '@material-ui/icons/GpsFixed';\r\nimport NotCenteredIcon from '@material-ui/icons/GpsNotFixed';\r\n\r\nconst useStyles = makeStyles( {\r\n  root: {\r\n    borderRadius: '50%',\r\n  }\r\n} );\r\n\r\ninterface Props\r\n{\r\n  centered: boolean;\r\n  onResetTranslation: () => void;\r\n}\r\n\r\nconst TranslationControl: React.FC<Props> = React.memo( ( { centered, onResetTranslation } ) =>\r\n{\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Paper className={styles.root}>\r\n      <IconButton\r\n        title=\"Reset Center\"\r\n        size=\"medium\"\r\n        disabled={centered}\r\n        onClick={onResetTranslation}\r\n      >\r\n        {centered ?\r\n          (\r\n            <CenteredIcon />\r\n          ) : (\r\n            <NotCenteredIcon />\r\n          )\r\n        }\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n} );\r\n\r\nexport default TranslationControl;\r\n","import color from 'color';\r\n\r\nconst GOLDEN_RATIO_GONJUGATE = 0.618033988749895;\r\n\r\nexport default function createColorSet()\r\n{\r\n  const colors: { [ value: string ]: string } = {};\r\n  let h: number = 0.91018206932939563879;\r\n\r\n  return ( value: string, s: number = 100, v: number = 100 ) =>\r\n  {\r\n    const key = `${value}_${s}_${v}`;\r\n    if( !( key in colors ) )\r\n    {\r\n      h += GOLDEN_RATIO_GONJUGATE;\r\n      h %= 1;\r\n      colors[ key ] = color.hsv( h * 360, s, v ).hex();\r\n    }\r\n    return colors[ key ];\r\n  };\r\n}\r\n","import React, { useEffect, useRef, useCallback, useState } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\n\r\nimport ScaleControl from 'components/ScaleControl';\r\nimport TranslationControl from 'components/TranslationControl';\r\n\r\nimport { NodeDatum, LinkDatum } from 'data/Simulation';\r\n\r\nimport createColorSet from 'utilities/colorSet';\r\n\r\ninterface StyleProps\r\n{\r\n  nodeRadius: number;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, StyleProps>( ( theme ) => createStyles( {\r\n  root: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    userSelect: 'none',\r\n  },\r\n  graph: {\r\n    position: 'relative',\r\n    left: '50%',\r\n    top: '50%',\r\n    width: 0,\r\n    height: 0,\r\n  },\r\n  link: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    height: 1,\r\n    transformOrigin: 'top left',\r\n  },\r\n  node: ( { nodeRadius } ) => ( {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: nodeRadius * 2,\r\n    height: nodeRadius * 2,\r\n    borderRadius: '50%',\r\n    borderWidth: 4,\r\n    borderStyle: 'solid',\r\n    overflow: 'hidden',\r\n    transform: 'translate( -50%, -50% )',\r\n  } ),\r\n  recipeNode: {\r\n    borderColor: 'green',\r\n  },\r\n  ingredientNode: {\r\n    borderColor: 'orange',\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    height: '100%',\r\n    pointerEvents: 'none',\r\n  },\r\n  controls: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    padding: theme.spacing( 1 ),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-end',\r\n    '& > *:not( :last-child )': {\r\n      marginBottom: theme.spacing( 1 ),\r\n    },\r\n  },\r\n} ) );\r\n\r\ninterface Props\r\n{\r\n  nodes: NodeDatum[];\r\n  links: LinkDatum[];\r\n  nodeRadius: number;\r\n  onNodeDrag: ( node: NodeDatum, x: number, y: number ) => void;\r\n  onNodeDragEnd: ( node: NodeDatum ) => void;\r\n  onNodeClick: ( node: NodeDatum ) => void;\r\n}\r\n\r\nconst colors = createColorSet();\r\n\r\nconst HtmlGraph: React.FC<Props> = ( { nodes, links, nodeRadius, onNodeDrag, onNodeDragEnd, onNodeClick } ) =>\r\n{\r\n  const styles = useStyles( { nodeRadius } );\r\n\r\n  const containerRef = useRef<HTMLDivElement | null>( null );\r\n  const draggingBackgroundRef = useRef( false );\r\n  const draggingNodeRef = useRef<NodeDatum | null>( null );\r\n  const firstMoveRef = useRef( true );\r\n  const movedRef = useRef( false );\r\n\r\n  const [ scale, setScale ] = useState( 0.5 );\r\n  const [ translation, setTranslation ] = useState( { x: 0, y: 0 } );\r\n  const setScaleBounded = useCallback( ( newScale: number ) => setScale( Math.max( 0.1, Math.round( ( newScale ) * 100 ) / 100 ) ), [] );\r\n\r\n  const onResetTranslation = useCallback( () =>\r\n  {\r\n    setTranslation( { x: 0, y: 0 } );\r\n  }, [] );\r\n\r\n  const onBackgroundMouseDown = useCallback( () =>\r\n  {\r\n    draggingNodeRef.current = null;\r\n    draggingBackgroundRef.current = true;\r\n    firstMoveRef.current = true;\r\n    movedRef.current = false;\r\n  }, [] );\r\n\r\n  const onNodeMouseDown = ( node: NodeDatum, e: React.MouseEvent<HTMLElement> ) =>\r\n  {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    draggingNodeRef.current = node;\r\n    draggingBackgroundRef.current = false;\r\n    firstMoveRef.current = true;\r\n    movedRef.current = false;\r\n  };\r\n\r\n  useEffect( () =>\r\n  {\r\n    const onMouseMove = ( e: MouseEvent ) =>\r\n    {\r\n      if( draggingBackgroundRef.current )\r\n      {\r\n        const movementX = e.movementX;\r\n        const movementY = e.movementY;\r\n\r\n        setTranslation( ( { x, y } ) => ( {\r\n          x: x + movementX,\r\n          y: y + movementY,\r\n        } ) );\r\n      }\r\n      else\r\n      {\r\n\r\n        if( !containerRef.current )\r\n        {\r\n          console.error( 'No container ref on mousemove.' );\r\n          return;\r\n        }\r\n\r\n        if( !draggingNodeRef.current )\r\n        {\r\n          return;\r\n        }\r\n\r\n        const { left, top, width, height } = containerRef.current.getBoundingClientRect();\r\n\r\n        const x = ( e.clientX - left - width / 2 - translation.x ) / scale;\r\n        const y = ( e.clientY - top - height / 2 - translation.y ) / scale;\r\n\r\n        if( firstMoveRef.current )\r\n        {\r\n          firstMoveRef.current = false;\r\n          return;\r\n        }\r\n\r\n        movedRef.current = true;\r\n        onNodeDrag( draggingNodeRef.current, x, y );\r\n      }\r\n    };\r\n\r\n    window.addEventListener( 'mousemove', onMouseMove );\r\n\r\n    return () => window.removeEventListener( 'mousemove', onMouseMove );\r\n\r\n  }, [ onNodeDrag, scale, translation ] );\r\n\r\n  useEffect( () =>\r\n  {\r\n    const onMouseUp = ( e: MouseEvent ) =>\r\n    {\r\n      if( draggingNodeRef.current\r\n        && movedRef.current )\r\n      {\r\n        onNodeDragEnd( draggingNodeRef.current );\r\n      }\r\n\r\n      draggingNodeRef.current = null;\r\n      draggingBackgroundRef.current = false;\r\n      firstMoveRef.current = true;\r\n    };\r\n\r\n    window.addEventListener( 'mouseup', onMouseUp );\r\n\r\n    return () => window.removeEventListener( 'mouseup', onMouseUp );\r\n\r\n  }, [ onNodeDragEnd ] );\r\n\r\n  const onNodeMouseClick = useCallback( ( node: NodeDatum ) =>\r\n  {\r\n    if( !movedRef.current )\r\n    {\r\n      onNodeClick( node );\r\n    }\r\n  }, [ onNodeClick ] );\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={styles.root}\r\n      onMouseDown={onBackgroundMouseDown}\r\n    >\r\n      <div\r\n        className={styles.graph}\r\n        style={{\r\n          transform: `translate( ${translation.x}px, ${translation.y}px ) scale( ${scale} )`,\r\n        }}\r\n      >\r\n        {links.map( ( link ) =>\r\n        {\r\n          const xDistance = link.target.x - link.source.x;\r\n          const yDistance = link.target.y - link.source.y;\r\n\r\n          const distance = Math.sqrt( xDistance * xDistance + yDistance * yDistance );\r\n\r\n          const rotation = Math.atan2( yDistance, xDistance );\r\n\r\n          return (\r\n            <div\r\n              key={link.id}\r\n              className={styles.link}\r\n              style={{\r\n                width: distance,\r\n                transform: `translate( ${link.source.x}px, ${link.source.y}px ) rotate( ${rotation}rad )`,\r\n                backgroundColor: colors( link.target.id, 100, 50 ),\r\n              }}\r\n            />\r\n          );\r\n        } )}\r\n        {nodes.map( ( node ) => (\r\n          <div\r\n            key={node.id}\r\n            title={node.data.name}\r\n            className={classNames( styles.node, {\r\n              [ styles.recipeNode ]: node.type === 'recipe',\r\n              [ styles.ingredientNode ]: node.type === 'ingredient',\r\n            } )}\r\n            style={{\r\n              transform: `translate( ${node.x - nodeRadius}px, ${node.y - nodeRadius}px )`,\r\n            }}\r\n            onMouseDown={( e ) => onNodeMouseDown( node, e )}\r\n            onClick={() => onNodeMouseClick( node )}\r\n          >\r\n            <img\r\n              src={node.data.src}\r\n              alt={node.data.name}\r\n              className={styles.img}\r\n            />\r\n          </div>\r\n        ) )}\r\n      </div>\r\n      <div className={styles.controls}>\r\n        <ScaleControl\r\n          scale={scale}\r\n          setScale={setScaleBounded}\r\n        />\r\n        <TranslationControl\r\n          centered={translation.x === 0 && translation.y === 0}\r\n          onResetTranslation={onResetTranslation}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HtmlGraph;\r\n","import { useRef } from 'react';\r\n\r\nconst UNINITIALIZED = Symbol.for( 'UNINITIALIZED' );\r\n\r\nexport default function useRefInit<T>( init: () => T )\r\n{\r\n  const ref = useRef<T | typeof UNINITIALIZED>( UNINITIALIZED );\r\n  if( ref.current === UNINITIALIZED )\r\n  {\r\n    ref.current = init();\r\n  }\r\n  return ref as React.MutableRefObject<T>;\r\n}\r\n","export function distinct( values: string[] ): string[];\r\nexport function distinct( values: number[] ): number[];\r\nexport function distinct<T extends object>( values: T[], getKey: ( value: T ) => string ): T[];\r\nexport function distinct<T extends object>( values: T[], getKey?: ( value: T ) => string ): T[]\r\n{\r\n  let distinctValues: T[] = [];\r\n  let keys = new Set<string>();\r\n\r\n  for( let value of values )\r\n  {\r\n    let key = getKey ? getKey( value ) : value.toString();\r\n    if( !keys.has( key ) )\r\n    {\r\n      distinctValues.push( value );\r\n      keys.add( key );\r\n    }\r\n  }\r\n\r\n  return distinctValues;\r\n}\r\n\r\nexport function reversed<T>( arr: ArrayLike<T> )\r\n{\r\n  return Array.from( arr ).reverse();\r\n}\r\n","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { makeStyles, createStyles } from '@material-ui/core';\r\nimport { forceSimulation, forceLink, forceManyBody, forceCenter, forceRadial, forceCollide, Simulation } from 'd3-force';\r\n\r\nimport HtmlGraph from 'components/HtmlGraph';\r\n\r\nimport useRefInit from 'hooks/useRefInit';\r\n\r\nimport { Recipe, Ingredient } from 'data/Recipes';\r\nimport { NodeDatum, LinkDatum, UninitializedNodeDatum, UninitializedLinkDatum } from 'data/Simulation';\r\n\r\nimport { distinct } from 'utilities';\r\n\r\nconst NODE_RADIUS = 16;\r\n\r\nconst useStyles = makeStyles( ( theme ) => createStyles( {\r\n  container: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n} ) );\r\n\r\nconst recipeId = ( recipe: Recipe ) => `recipe_${recipe.name}`;\r\nconst ingredientId = ( ingredient: Ingredient ) => `ingredient_${ingredient.name}`;\r\nconst linkId = ( recipe: Recipe, ingredient: Ingredient ) => `${recipeId( recipe )}->${ingredientId( ingredient )}`;\r\n\r\nconst createIngredientNode = ( ingredient: Ingredient ): UninitializedNodeDatum => ( {\r\n  id: ingredientId( ingredient ),\r\n  name: ingredient.name,\r\n  type: 'ingredient',\r\n  data: ingredient,\r\n} );\r\n\r\nconst createRecipeNode = ( recipe: Recipe ): UninitializedNodeDatum => ( {\r\n  id: recipeId( recipe ),\r\n  name: `${recipe.name} (${recipe.category})`,\r\n  type: 'recipe',\r\n  data: recipe,\r\n} );\r\n\r\ninterface HiddeNodes { [ nodeId: string ]: boolean | undefined; }\r\n\r\nfunction isLinkNodeHidden( linkNode: UninitializedLinkDatum[ 'source' ] | UninitializedLinkDatum[ 'target' ], hiddenNodes: HiddeNodes )\r\n{\r\n  if( typeof linkNode === 'object' )\r\n  {\r\n    if( hiddenNodes[ linkNode.id ] )\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n  else if( typeof linkNode === 'string' )\r\n  {\r\n    if( hiddenNodes[ linkNode ] )\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\ninterface Props\r\n{\r\n  recipes: Recipe[];\r\n}\r\n\r\nconst RecipeGraph: React.FC<Props> = ( { recipes } ) =>\r\n{\r\n  const styles = useStyles();\r\n\r\n  const [ hiddenNodes, setHiddenNodes ] = useState<HiddeNodes>( {} );\r\n\r\n  const simulationRef = useRefInit<Simulation<NodeDatum, LinkDatum>>( () =>\r\n  {\r\n    return forceSimulation<NodeDatum, LinkDatum>()\r\n      .force( 'charge', forceManyBody().strength( -NODE_RADIUS * 20 ) )\r\n      .force( 'center', forceCenter( 0, 0 ) )\r\n      .force( 'radial', forceRadial( 500 ) )\r\n      .force( 'collide', forceCollide( NODE_RADIUS ) );\r\n  } );\r\n\r\n  const nodesRef = useRef<NodeDatum[]>( [] );\r\n  useEffect( () =>\r\n  {\r\n    const ingredients = distinct( recipes.flatMap( ( recipe ) => recipe.ingredients ), ( ingredient ) => ingredient.name );\r\n\r\n    const existingNodes = new Set( nodesRef.current.map( ( n ) => n.id ) );\r\n    const allNodes = new Set( [\r\n      ...ingredients.map( ingredientId ),\r\n      ...recipes.map( recipeId ),\r\n    ] );\r\n\r\n    nodesRef.current = [\r\n      ...nodesRef.current.filter( ( n ) => allNodes.has( n.id ) ),\r\n      ...ingredients.filter( ( ingredient ) => !existingNodes.has( ingredientId( ingredient ) ) ).map( createIngredientNode ),\r\n      ...recipes.filter( ( recipe ) => !existingNodes.has( recipeId( recipe ) ) ).map( createRecipeNode ),\r\n    ].filter( ( n ) => !hiddenNodes[ n.id ] ) as NodeDatum[];\r\n\r\n    simulationRef.current.nodes( nodesRef.current );\r\n\r\n  }, [ simulationRef, nodesRef, recipes, hiddenNodes ] );\r\n\r\n  const linksRef = useRef<LinkDatum[]>( [] );\r\n  useEffect( () =>\r\n  {\r\n    linksRef.current = recipes\r\n      .flatMap<UninitializedLinkDatum>( ( recipe ) =>\r\n        recipe.ingredients\r\n          .map( ( ingredient ) => ( {\r\n            id: linkId( recipe, ingredient ),\r\n            source: recipeId( recipe ),\r\n            target: ingredientId( ingredient ),\r\n          } ) )\r\n      ).filter( ( l ) => !isLinkNodeHidden( l.source, hiddenNodes ) && !isLinkNodeHidden( l.target, hiddenNodes ) ) as LinkDatum[];\r\n\r\n    simulationRef.current\r\n      .force( 'link',\r\n        forceLink<NodeDatum, LinkDatum>( linksRef.current ).id( ( node ) => node.id )\r\n          .distance( NODE_RADIUS * 10 )\r\n      );\r\n\r\n  }, [ simulationRef, recipes, hiddenNodes ] );\r\n\r\n  const [ , setUpdateCount ] = useState( 0 );\r\n  useEffect( () =>\r\n  {\r\n    const sim = simulationRef.current;\r\n\r\n    function onTick()\r\n    {\r\n      setUpdateCount( ( oldUpdateCount ) => oldUpdateCount + 1 );\r\n    }\r\n\r\n    sim.on( `tick.${RecipeGraph.name}`, onTick );\r\n\r\n    return () =>\r\n    {\r\n      sim.on( `tick.${RecipeGraph.name}`, null );\r\n    };\r\n  }, [ simulationRef ] );\r\n\r\n  const onNodeDrag = useCallback( ( node: NodeDatum, x: number, y: number ) =>\r\n  {\r\n    node.fx = x;\r\n    node.fy = y;\r\n    simulationRef.current.alpha( 1.0 );\r\n    simulationRef.current.restart();\r\n  }, [ simulationRef ] );\r\n\r\n  const onNodeDragEnd = useCallback( ( node: NodeDatum ) =>\r\n  {\r\n    node.fx = null;\r\n    node.fy = null;\r\n    simulationRef.current.alpha( 1.0 );\r\n    simulationRef.current.restart();\r\n  }, [ simulationRef ] );\r\n\r\n  const onNodeClick = useCallback( ( node: NodeDatum ) =>\r\n  {\r\n    setHiddenNodes( ( oldHiddenNodes ) => ( {\r\n      ...oldHiddenNodes,\r\n      [ node.id ]: !oldHiddenNodes[ node.id ],\r\n    } ) );\r\n  }, [] );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <HtmlGraph\r\n        nodes={nodesRef.current}\r\n        links={linksRef.current}\r\n        nodeRadius={NODE_RADIUS}\r\n        onNodeDrag={onNodeDrag}\r\n        onNodeDragEnd={onNodeDragEnd}\r\n        onNodeClick={onNodeClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeGraph;\r\n","import allRecipes from 'data/recipes.json';\r\n\r\nexport interface Ingredient\r\n{\r\n  name: string;\r\n  src: string;\r\n}\r\n\r\nexport interface Recipe\r\n{\r\n  name: string;\r\n  category: string;\r\n  src: string;\r\n  ingredients: Ingredient[];\r\n}\r\n\r\nexport const recipes: Recipe[] = allRecipes;\r\n","import React from 'react';\r\n\r\nimport RecipeGraph from 'components/RecipeGraph';\r\n\r\nimport { Recipe, recipes as allRecipes } from 'data/Recipes';\r\n\r\nimport { distinct } from 'utilities';\r\n\r\nconst DISPLAYED_CATEGORIES = new Set( [\r\n  'Breakfast',\r\n  'Morning Dollar Value Menu',\r\n  'Burritos',\r\n  'Dollar Cravings Menu',\r\n  'Freezes',\r\n  'Fresco Menu',\r\n  'Limited Time Offer',\r\n  'Power Menu',\r\n  'Sides',\r\n  'Specialties',\r\n  'Drinks & Sweets',\r\n  'Tacos',\r\n  'Cantina Menu',\r\n  'Cantina Beer, Wine and Spirits',\r\n  'Las Vegas Cantina Menu',\r\n  'Vegetarian Menu',\r\n] );\r\nconst recipes: Recipe[] = distinct(\r\n  allRecipes.filter( ( recipe ) => DISPLAYED_CATEGORIES.has( recipe.category ) ),\r\n  ( recipe ) => recipe.name\r\n);\r\n\r\nconst Main: React.FC = () =>\r\n{\r\n  return (\r\n    <RecipeGraph recipes={recipes} />\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { createMuiTheme, MuiThemeProvider, CssBaseline } from '@material-ui/core';\r\n\r\nimport 'typeface-roboto';\r\n\r\nimport Main from 'components/Main';\r\n\r\nimport './App.css';\r\n\r\nconst theme = createMuiTheme( {\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n} );\r\n\r\nconst App: React.FC = () =>\r\n{\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Main />\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById( 'root' )\n);\n\nif( process.env.NODE_ENV === 'development' )\n{\n  if( module.hot )\n  {\n    module.hot.accept( './App', () =>\n    {\n      console.log( '---------- %cAPP HOT RELOAD%c ----------', 'color: lightblue; font-weight: bold;', '' );\n\n      ReactDOM.render(\n        <App />,\n        document.getElementById( 'root' )\n      );\n    } );\n  }\n}\n"],"sourceRoot":""}